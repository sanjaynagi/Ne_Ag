geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
dev.off()
a
ggplot(a, aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light()
pops
all_ibdne %>% filter(`pop` == 'KE') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle('KE') +
theme_light()
all_ibdne %>% filter(`pop` == 'KE') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle('KE') +
theme_light()
all_ibdne %>% filter(`pop` == 'FRgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
theme_light()
all_ibdne %>% filter(`pop` == 'AOcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
theme_light() +
all_ibdne %>% filter(`pop` == 'GHcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
theme_light() +
ggtitle("GHcol")
all_ibdne %>% filter(`pop` == 'GW') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
theme_light() + ggtitle("GW")
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (pop in pops){
for (n in ns){
print(pop)
print(n)
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
dev.off()
pdf("ibdne_plots.pdf")
for (pop in pops){
for (n in ns){
print(pop)
print(n)
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(`x=`GEN`, y=`NE`)) +
geom_line() +
#      scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
pdf("ibdne_plots.pdf")
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(`x=`GEN`, y=`NE`)) +
geom_line() +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light()
}
}
dev.off()
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
pdf("ibdne_plots.pdf")
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
dev.off()
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
pdf("ibdne_plots.pdf")
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
dev.off()
dev.off()
dev.off()
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
for (pop in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == pop) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
# geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue('{pop}')) +
theme_light())
}
}
all_ibdne %>% filter(`pop` == 'KE') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle('KE') +
theme_light()
for (pop in 'KE'){
print(all_ibdne %>% filter(`pop` == 'KE') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle('KE') +
theme_light())
}
for (pop in 'KE'){
print(all_ibdne %>% filter(`pop` == pop) %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
str(all_ibdne)
for (pop in 'KE'){
a = all_ibdne %>% filter(`pop` == pop)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
for (pop in 'KE'){
a = all_ibdne %>% filter(`pop` == pop)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_line() +
#  scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
for (pop in 'KE'){
a = all_ibdne %>% filter(`pop` == pop)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
#geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
for (pop in 'KE'){
a = all_ibdne %>% filter(`pop` == pop)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_point() +
scale_y_continuous(labels = comma) +
#geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
str(all_ibdne)
all_ibdne
View(all_ibdne)
Ke = all_ibdne %>% filter(`pop` == 'KE')
View(Ke)
for (pop in 'KE'){
a = all_ibdne %>% filter(`pop` == pop)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_point() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
for (pop in 'KE'){
a = all_ibdne %>% filter(`pop` == pop)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_point() +
scale_y_continuous(labels = comma) +
#geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop))
}
for (pop in 'KE'){
a = all_ibdne %>% filter(`pop` == pop)
print(a)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_point() +
scale_y_continuous(labels = comma) +
#geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop))
}
a = all_ibdne %>% filter(`pop` == pop)
pop
a = all_ibdne %>% filter(`pop` == "KE")
for (pops in 'KE'){
a = all_ibdne %>% filter(`pop` == pops)
print(a)
print(ggplot(a, aes(x=GEN, y=NE)) +
geom_point() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop))
}
### plots ####
ns = c(50,200)
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_line() +
# geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop)) +
theme_light())
}
}
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_point() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
}
dev.off()
dev.off()
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_point() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
}
dev.off()
pops
pops = unique(samples$population)
#################
pops = pops[!pops %in% c('GQgam','GNcol','GHgam','CMgam')]
ibdne = list()
for (pop in pops){
ibdne[[pop]] = fread(glue("ibdne/{pop}_ibdne.ne"))
ibdne[[pop]] = ibdne[[pop]] %>% filter(`GEN` >= 4 & `GEN` <= 50)
}
all_ibdne = bind_rows(ibdne, .id = "pop")
View(all_ibdne)
###############
samples = fread("~/ag1000g/data/samples.meta.txt")
pops = unique(samples$population)
#################
pops = pops[!pops %in% c('GQgam','GNcol','GHgam','CMgam')]
ibdne = list()
for (pop in pops){
ibdne[[pop]] = fread(glue("ibdne/{pop}_ibdne.ne"))
}
all_ibdne = bind_rows(ibdne, .id = "pop")
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_point() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(pop) +
theme_light())
}
}
dev.off()
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_point() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(population) +
theme_light())
}
}
dev.off()
### plots ####
ns = c(50,200)
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_point() +
scale_y_continuous(breaks = round(seq(0, max(a$`UPR-95%CI`), by = max(a$`UPR-95%CI`)/10),0) ,labels = comma) +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(population) +
theme_light())
}
}
dev.off()
### plots ####
ns = c(50,200)
pdf("ibdne_plots_no_CIs.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_point() +
scale_y_continuous(breaks = round(seq(0, max(a$NE), by = max(a$NE)/10),0) ,labels = comma) +
ggtitle(glue("{population} 4 to {n} generations ago")) +
theme_light())
}
}
dev.off()
### plots ####
ns = c(50,200)
pdf("ibdne_plots.pdf")
for (population in pops){
for (n in ns){
a = all_ibdne %>% filter(`pop` == population) %>% filter(`GEN` >= 4 & `GEN` <= n)
print(ggplot(a, aes(x=`GEN`, y=`NE`))+
geom_point() +
scale_y_continuous(breaks = round(seq(0, max(a$`UPR-95%CI`), by = max(a$`UPR-95%CI`)/10),0) ,labels = comma) +
geom_ribbon(aes(ymin=a$`LWR-95%CI`, ymax=a$`UPR-95%CI`),fill='blue', alpha=0.3) +
ggtitle(glue("{population} 4 to {n} generations ago")) +
theme_light())
}
}
dev.off()
hm_mean = function(a){
b = 1/mean(1/a)
return(b)
}
#### calculate geometric means for IBDNe estimates
Ne_means = c()
for (pop in pops){
Ne =hm_mean(ibdne[[pop]]$NE)
Ne_means = c(Ne_means, Ne)
}
names(Ne_means) = names(ibdne)
Ne_means = data.frame(Ne_means)
View(Ne_means)
#### calculate geometric means for IBDNe estimates
IBDNe_harmonic_means = c()
for (pop in pops){
Ne =hm_mean(ibdne[[pop]]$NE)
IBDNe_harmonic_means = c(IBDNe_harmonic_means, Ne)
}
names(IBDNe_harmonic_means) = names(ibdne)
IBDNe_harmonic_means = data.frame(IBDNe_harmonic_means)
IBDNe_harmonic_means
IBDNe_harmonic_means = sort(IBDNe_harmonic_means)
sort(IBDNe_harmonic_means$IBDNe_harmonic_means)
order(IBDNe_harmonic_means)
IBDNe_harmonic_means = data.frame(IBDNe_harmonic_means)[order(IBDNe_harmonic_means$IBDNe_harmonic_means),]
#### calculate geometric means for IBDNe estimates
IBDNe_harmonic_means = c()
for (pop in pops){
Ne =hm_mean(ibdne[[pop]]$NE)
IBDNe_harmonic_means = c(IBDNe_harmonic_means, Ne)
}
names(IBDNe_harmonic_means) = names(ibdne)
IBDNe_harmonic_means = data.frame(IBDNe_harmonic_means)
IBDNe_harmonic_means = IBDNe_harmonic_means[order(IBDNe_harmonic_means$IBDNe_harmonic_means),]
#### calculate geometric means for IBDNe estimates
IBDNe_harmonic_means = c()
for (pop in pops){
Ne =hm_mean(ibdne[[pop]]$NE)
IBDNe_harmonic_means = c(IBDNe_harmonic_means, Ne)
}
names(IBDNe_harmonic_means) = names(ibdne)
IBDNe_harmonic_means = data.frame(IBDNe_harmonic_means)
View(IBDNe_harmonic_means)
#### calculate geometric means for IBDNe estimates
IBDNe_harmonic_means = c()
for (pop in pops){
Ne =hm_mean(ibdne[[pop]]$NE)
IBDNe_harmonic_means = c(IBDNe_harmonic_means, Ne)
}
names(IBDNe_harmonic_means) = names(ibdne)
IBDNe_harmonic_means = data.frame(IBDNe_harmonic_means) %>% rownames_to_column('Population')
IBDNe_harmonic_means[order(IBDNe_harmonic_means$IBDNe_harmonic_means),]
IBDNe_harmonic_means = IBDNe_harmonic_means[order(IBDNe_harmonic_means$IBDNe_harmonic_means),]
fwrite(IBDNe_harmonic_means, "IBDNe_Harmonic_means.txt", sep="\t")
fwrite(IBDNe_harmonic_means, "IBDNe_Harmonic_means.txt", sep="\t", row.names = FALSE)
fwrite(IBDNe_harmonic_means, "idbne/IBDNe_Harmonic_means.txt", sep="\t", row.names = FALSE)
fwrite(IBDNe_harmonic_means, "ibdne/IBDNe_Harmonic_means.txt", sep="\t", row.names = FALSE)
all_ibdne %>% filter(`pop` == 'CIcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
theme_light() + ggtitle("CIcol")
#### IBDNe ####
library(tidyverse)
library(glue)
library(data.table)
library(scales)
all_ibdne %>% filter(`pop` == 'CIcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
theme_light() + ggtitle("CIcol")
all_ibdne %>% filter(`pop` == 'BFcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma) +
geom_ribbon(aes(ymin=`LWR-95%CI`, ymax=`UPR-95%CI`),fill='blue', alpha=0.3) +
theme_light() + ggtitle("BFcol")
