library(radiator)
genomic_converter(data="../data/noncoding/downsample/FRgam_3L_random.vcf", out='genepop)
genepop = genomic_converter(data="../data/noncoding/downsample/FRgam_3L_random.vcf", out='genepop')
rlang::last_error()
rlang::last_trace()
l
genepop
l
-+
q()
library(tidyverse)
library(glue)
library(data.table)
samples = fread("~/ag1000g/data/samples.meta.txt")
pops = unique(samples$population)
list.files("ibdne/")
legnth(list.files("ibdne/"))
length(list.files("ibdne/"))
65/13
#################
pops %>% select(-'GQgam', -'GNcol', 'GHgam')
#################
pops[pops !='GQgam'|'GNcol'|'GHgam')
ibdne = list()
length(list.files("ibdne/"))
#################
pops[pops != 'GQgam'|'GNcol'|'GHgam']
#################
pops[(pops != 'GQgam'|'GNcol'|'GHgam')]
#################
pops[pops != 'GQgam']
#################
pops[!pops %in% 'GQgam'|'GNcol'|'GHgam']
#################
pops[!pops %in% c('GQgam','GNcol','GHgam')]
#################
pops = pops[!pops %in% c('GQgam','GNcol','GHgam')]
ibdne = list()
ibdne = list()
for (pop in pops){
ibdne[pop]= fread(glue("ibdne/{pop}.ibdne.ne"))
}
list.files("ibdne/*ibdne.ne")
list.files("ibdne/*")
list.files("ibdne/")
samples = fread("~/ag1000g/data/samples.meta.txt")
pops = unique(samples$population)
#################
pops = pops[!pops %in% c('GQgam','GNcol','GHgam')]
ibdne = list()
for (pop in pops){
ibdne[pop]= fread(glue("ibdne/{pop}.ibdne.ne"))
}
ibdne = list()
for (pop in pops){
ibdne[pop]= fread(glue("ibdne/{pop}_ibdne.ne"))
}
#################
pops = pops[!pops %in% c('GQgam','GNcol','GHgam','CMgam')]
ibdne = list()
for (pop in pops){
ibdne[pop]= fread(glue("ibdne/{pop}_ibdne.ne"))
}
warnings
warnings()
samples = fread("~/ag1000g/data/samples.meta.txt")
pops = unique(samples$population)
#################
pops = pops[!pops %in% c('GQgam','GNcol','GHgam','CMgam')]
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
}
ibdne['UGgam']
ggplot(ibdne['BFgam'], aes(GEN,NE)) +geom_line()
ggplot(data.frame(ibdne['BFgam']), aes(GEN,NE)) +geom_line()
ibdne['BFgam']
df = data.frame(ibdne['BFgam'])
View(df)
View(df)
View(df)
df = data.frame(ibdne[['BFgam']])
View(df)
ggplot(data.frame(ibdne[['BFgam']]), aes(GEN,NE)) +geom_line()
View(df)
flatten(ibdne)
test = flatten(ibdne)
View(df)
View(df)
View(df)
View(df)
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
colnames(ibdne[[pop]]) = c("GEN", glue("{pop}_Ne"), glue("{pop}_95lwr"), glue("{pop}_95upr"))
}
merge(ibdne[[1]], ibdne[[2]])
merge(ibdne)
ibdne %>% reduce(left_join, by = "GEN")
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
#colnames(ibdne[[pop]]) = c("GEN", glue("{pop}_Ne"), glue("{pop}_95lwr"), glue("{pop}_95upr"))
ibdne[[pop]]$pop = pop
}
ibdne %>% reduce(left_join, by = "GEN")
?reduce
merge(ibdne[[1]], ibdne[[2]])
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
#colnames(ibdne[[pop]]) = c("GEN", glue("{pop}_Ne"), glue("{pop}_95lwr"), glue("{pop}_95upr"))
ibdne[[pop]]$pop = pop
}
merge(ibdne[[1]], ibdne[[2]])
merge(ibdne[['UGgam']], ibdne[['BFgam']])
View(ibdne)
merge(ibdne[['UGgam']], ibdne[['BFgam']])
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
colnames(ibdne[[pop]]) = c("GEN", glue("{pop}_Ne"), glue("{pop}_95lwr"), glue("{pop}_95upr"))
ibdne[[pop]]$pop = pop
}
df = ibdne[[1]]
df
bind_rows(ibdne, .id = "column_label")
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
#colnames(ibdne[[pop]]) = c("GEN", glue("{pop}_Ne"), glue("{pop}_95lwr"), glue("{pop}_95upr"))
ibdne[[pop]]$pop = pop
}
bind_rows(ibdne, .id = "column_label")
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
}
bind_rows(ibdne, .id = "column_label")
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
}
all_ibdne = bind_rows(ibdne, .id = "pop")
ggplot(all_ibdne, aes(x=GEN, y=NE, fill=pop)) +geom_line()
ggplot(all_ibdne, aes(x=GEN, y=NE)) +geom_line()
max(all_ibdne$NE)
which(max(all_ibdne$NE))
which.max(all_ibdne$NE))
which.max(all_ibdne$NE)
all_ibdne[which.max(all_ibdne$NE),]
View(all_ibdne)
View(samples)
all_ibdne %>% filter(pop == 'BFcol') %>% ggplot(., aes(x=GEN, y=NE)) + geom_line()
all_ibdne %>% filter(`pop` == 'BFcol') %>% ggplot(., aes(x=GEN, y=NE)) + geom_line()
all_ibdne %>% filter(`pop` == 'BFcol') %>% ggplot(., aes(x=GEN, y=NE)) + geom_line()
all_ibdne[all_ibdne$pop == 'BFcol']
all_ibdne %>% filter(`pop` == 'BFgam') %>% ggplot(., aes(x=GEN, y=NE)) + geom_line()
library(scales)
all_ibdne %>% filter(`pop` == 'BFgam') %>% ggplot(., aes(x=GEN, y=NE)) + geom_line() + scale_x_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'BFgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_x_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'BFgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'KE') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'FRgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`NE` => 4)
all_ibdne %>% filter(`NE` >= 4)
all_ibdne = all_ibdne %>% filter(`NE` >= 4)
all_ibdne %>% filter(`pop` == 'BFgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne = all_ibdne %>% filter(`GEN` >= 4)
all_ibdne %>% filter(`pop` == 'BFgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'KE') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'FRgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'FRgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
unique(all_ibdne$pop)
all_ibdne %>% filter(`pop` == 'AOcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'GHcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'KE') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'FRgam') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'AOcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'GHcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
all_ibdne %>% filter(`pop` == 'GHcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
unique(all_ibdne$pop)
all_ibdne %>% filter(`pop` == 'GW') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
300/12
unique(all_ibdne$pop)
all_ibdne %>% filter(`pop` == 'CIcol') %>%
ggplot(., aes(x=GEN, y=NE)) +
geom_line() +
scale_y_continuous(labels = comma)
View(all_ibdne)
####### geometric mean function ###########
gm_mean = function(x, na.rm=TRUE, zero.propagate = FALSE){
if(any(x < 0, na.rm = TRUE)){
return(NaN)
}
if(zero.propagate){
if(any(x == 0, na.rm = TRUE)){
return(0)
}
exp(mean(log(x), na.rm = na.rm))
} else {
exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
}
}
all_ibdne %>% group_by(`pop`) %>% gm_mean(.)
all_ibdne %>% group_by(`pop`) %>% gm_mean()
all_ibdne %>% group_by(`pop`) %>% gm_mean(.$NE)
gm_mean(all_ibdne$NE)
gm_mean(ibdne[[1]]$NE)
lapply(ibdne, gm_mean)
Ne_means = c()
for (pop in pops){
Ne = gm_mean(ibdne[[pop]]$NE)
Ne_means = c(Ne_means, Ne)
}
names(Ne_means) = names(ibdne)
Ne_means
data.frame(Ne_means)
Ne_means = data.frame(Ne_means)
ibdne = list()
for (pop in pops){
ibdne[[pop]]= fread(glue("ibdne/{pop}_ibdne.ne"))
}
all_ibdne = bind_rows(ibdne, .id = "pop")
all_ibdne = all_ibdne %>% filter(`GEN` >= 4 & `GEN` <= 10)
Ne_means = c()
for (pop in pops){
Ne = gm_mean(ibdne[[pop]]$NE)
Ne_means = c(Ne_means, Ne)
}
names(Ne_means) = names(ibdne)
Ne_means = data.frame(Ne_means)
View(Ne_means)
ibdne = list()
for (pop in pops){
ibdne[[pop]] = fread(glue("ibdne/{pop}_ibdne.ne"))
ibdne[[pop]] = ibdne[[pop]] %>% filter(`GEN` >= 4 & `GEN` <= 10)
}
Ne_means = c()
for (pop in pops){
Ne = gm_mean(ibdne[[pop]]$NE)
Ne_means = c(Ne_means, Ne)
}
names(Ne_means) = names(ibdne)
Ne_means = data.frame(Ne_means)
View(Ne_means)
Ne_means
options(scipen=999)
Ne_means
